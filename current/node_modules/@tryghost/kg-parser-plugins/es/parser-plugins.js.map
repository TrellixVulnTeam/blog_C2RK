{"version":3,"file":"parser-plugins.js","sources":["../lib/helpers.js","../lib/cards/embed.js","../lib/cards/button.js","../lib/parser-plugins.js"],"sourcesContent":["export function addFigCaptionToPayload(node, payload, {selector = 'figcaption', options}) {\n    let figcaptions = Array.from(node.querySelectorAll(selector));\n\n    if (figcaptions.length) {\n        figcaptions.forEach((caption) => {\n            let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n            payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n            caption.remove(); // cleanup this processed element\n        });\n    }\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\n// Helpers\n\nfunction _createPayloadForIframe(iframe) {\n    // If we don't have a src Or it's not an absolute URL, we can't handle this\n    // This regex handles http://, https:// or //\n    if (!iframe.src || !iframe.src.match(/^(https?:)?\\/\\//i)) {\n        return;\n    }\n\n    // if it's a schemaless URL, convert to https\n    if (iframe.src.match(/^\\/\\//)) {\n        iframe.src = `https:${iframe.src}`;\n    }\n\n    let payload = {\n        url: iframe.src\n    };\n\n    payload.html = iframe.outerHTML;\n\n    return payload;\n}\n\n// Plugins\n\nexport function fromMixtape(options) {\n    return function mixtapeEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/graf--mixtapeEmbed/)) {\n            return;\n        }\n\n        // Grab the relevant elements - Anchor wraps most of the data\n        let anchorElement = node.querySelector('.markup--mixtapeEmbed-anchor');\n        let titleElement = anchorElement.querySelector('.markup--mixtapeEmbed-strong');\n        let descElement = anchorElement.querySelector('.markup--mixtapeEmbed-em');\n        // Image is a top level field inside it's own a tag\n        let imgElement = node.querySelector('.mixtapeImage');\n\n        // Grab individual values from the elements\n        let url = anchorElement.href;\n        let title = '';\n        let description = '';\n\n        if (titleElement && titleElement.innerHTML) {\n            title = options.cleanBasicHtml(titleElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed title\n            anchorElement.removeChild(titleElement);\n        }\n\n        if (descElement && descElement.innerHTML) {\n            description = options.cleanBasicHtml(descElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed description\n            anchorElement.removeChild(descElement);\n        }\n\n        // // Format our preferred structure.\n        let metadata = {\n            url,\n            title,\n            description\n        };\n\n        // Publisher is the remaining text in the anchor, once title & desc are removed\n        let publisher = options.cleanBasicHtml(anchorElement.innerHTML);\n        if (publisher) {\n            metadata.publisher = publisher;\n        }\n\n        // Image is optional,\n        // The element usually still exists with an additional has.mixtapeImage--empty class and has no background image\n        if (imgElement && imgElement.style['background-image']) {\n            metadata.thumbnail = imgElement.style['background-image'].match(/url\\(([^)]*?)\\)/)[1];\n        }\n\n        let payload = {url, metadata};\n        let cardSection = builder.createCardSection('bookmark', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureIframe(options) {\n    return function figureIframeToEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let iframe = node.querySelector('iframe');\n\n        if (!iframe) {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(iframe);\n\n        if (!payload) {\n            return;\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromIframe() {\n    return function iframeToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IFRAME') {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(node);\n\n        if (!payload) {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureBlockquote(options) {\n    return function figureBlockquoteToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let blockquote = node.querySelector('blockquote');\n        let link = node.querySelector('a');\n\n        if (!blockquote || !link) {\n            return;\n        }\n\n        let url = link.href;\n\n        // If we don't have a url, or it's not an absolute URL, we can't handle this\n        if (!url || !url.match(/^https?:\\/\\//i)) {\n            return;\n        }\n\n        let payload = {\n            url: url\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        payload.html = node.innerHTML;\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-button-card')) {\n            return;\n        }\n\n        const alignment = node.classList.contains('kg-align-center') ? 'center' : 'left';\n\n        const anchor = node.querySelector('a');\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromWordpressButton() {\n    return function wordpressButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-button__link')) {\n            return;\n        }\n\n        const buttonUrl = node.href;\n        const buttonText = getButtonText(node);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        let alignment = 'left';\n\n        if (node.closest('.is-content-justification-center, .is-content-justification-right')) {\n            alignment = 'center';\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSubstackButton() {\n    return function substackButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('button')) {\n            return;\n        }\n\n        // substack has .button-wrapper elems with a data-attrs JSON object with `url` and `text`\n        // we're not using that in favour of grabbing the anchor element directly for simplicity\n\n        const anchor = node.tagName === 'A' ? node : node.querySelector('a');\n\n        if (!anchor) {\n            return;\n        }\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment: 'center', // all Substack buttons are centered\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","/* global DOMParser, window */\n\n/**\n * Copied from:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/options/parser-plugins.js\n * Which makes use of:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/helpers/clean-basic-html.js\n *\n * These functions are used to proces nodes during parsing from DOM -> mobiledoc\n */\n\nimport cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nimport * as embedCard from './cards/embed';\nimport * as buttonCard from './cards/button';\n\nexport function createParserPlugins(_options = {}) {\n    const defaults = {};\n    const options = Object.assign({}, defaults, _options);\n\n    if (!options.createDocument) {\n        const Parser = (typeof DOMParser !== 'undefined' && DOMParser) || (typeof window !== 'undefined' && window.DOMParser);\n\n        if (!Parser) {\n            throw new Error('createParserPlugins() must be passed a `createDocument` function as an option when used in a non-browser environment');\n        }\n\n        options.createDocument = function (html) {\n            const parser = new Parser();\n            return parser.parseFromString(html, 'text/html');\n        };\n    }\n\n    options.cleanBasicHtml = function (html) {\n        return cleanBasicHtml(html, options);\n    };\n\n    // HELPERS -----------------------------------------------------------------\n\n    function _readFigCaptionFromNode(node, payload, selector = 'figcaption') {\n        let figcaptions = Array.from(node.querySelectorAll(selector));\n\n        if (figcaptions.length) {\n            figcaptions.forEach((caption) => {\n                let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n                payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n                caption.remove(); // cleanup this processed element\n            });\n        }\n    }\n\n    function _readGalleryImageFromNode(node, imgNum) {\n        let fileName = node.src.match(/[^/]*$/)[0];\n        let image = {\n            fileName,\n            row: Math.floor(imgNum / 3),\n            src: node.src\n        };\n\n        if (node.width) {\n            image.width = node.width;\n        } else if (node.dataset && node.dataset.width) {\n            image.width = parseInt(node.dataset.width, 10);\n        }\n\n        if (node.height) {\n            image.height = node.height;\n        } else if (node.dataset && node.dataset.height) {\n            image.height = parseInt(node.dataset.height, 10);\n        }\n\n        if ((!node.width && !node.height) && node.getAttribute('data-image-dimensions')) {\n            const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(node.getAttribute('data-image-dimensions'));\n            image.width = parseInt(width, 10);\n            image.height = parseInt(height, 10);\n        }\n\n        if (node.alt) {\n            image.alt = node.alt;\n        }\n\n        if (node.title) {\n            image.title = node.title;\n        }\n\n        return image;\n    }\n\n    // PLUGINS -----------------------------------------------------------------\n\n    // https://github.com/TryGhost/Koenig/issues/1\n    // allows arbitrary HTML blocks wrapped in our card comments to be extracted\n    // into a HTML card rather than being put through the normal parse+plugins\n    function kgHtmlCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 8 || node.nodeValue !== 'kg-card-begin: html') {\n            return;\n        }\n\n        let html = [];\n\n        function isHtmlEndComment(n) {\n            return n && n.nodeType === 8 && n.nodeValue === 'kg-card-end: html';\n        }\n\n        let nextNode = node.nextSibling;\n        while (nextNode && !isHtmlEndComment(nextNode)) {\n            let currentNode = nextNode;\n            html.push(currentNode.outerHTML);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        let payload = {html: html.join('\\n').trim()};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function kgCalloutCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-callout-card')) {\n            return;\n        }\n\n        const emojiNode = node.querySelector('.kg-callout-emoji');\n        const htmlNode = node.querySelector('.kg-callout-text');\n\n        const backgroundColor = node.style.backgroundColor || '#F1F3F4';\n\n        let calloutEmoji = '';\n        if (emojiNode) {\n            calloutEmoji = emojiNode.textContent;\n            if (calloutEmoji) {\n                calloutEmoji = calloutEmoji.trim();\n            }\n        }\n\n        let calloutText = htmlNode.innerHTML;\n\n        const payload = {\n            calloutEmoji,\n            calloutText,\n            backgroundColor\n        };\n\n        const cardSection = builder.createCardSection('callout', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function kgToggleCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-toggle-card')) {\n            return;\n        }\n\n        const headingNode = node.querySelector('.kg-toggle-heading');\n        const contentNode = node.querySelector('.kg-toggle-content');\n\n        let toggleHeading = headingNode.innerHTML;\n        let toggleContent = contentNode.innerHTML;\n\n        const payload = {\n            heading: toggleHeading,\n            content: toggleContent\n        };\n\n        const cardSection = builder.createCardSection('toggle', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // mobiledoc by default ignores <BR> tags but we have a custom SoftReturn atom\n    function brToSoftBreakAtom(node, builder, {addMarkerable, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'BR') {\n            return;\n        }\n\n        let softReturn = builder.createAtom('soft-return');\n        addMarkerable(softReturn);\n\n        nodeFinished();\n    }\n\n    // leading newlines in text nodes will add a space to the beginning of the text\n    // which doesn't render correctly if we're replacing <br> with SoftReturn atoms\n    // after parsing text as markdown to html\n    function removeLeadingNewline(node) {\n        if (node.nodeType !== 3 || node.nodeName !== '#text') {\n            return;\n        }\n\n        node.nodeValue = node.nodeValue.replace(/^\\n/, '');\n    }\n\n    const kgGalleryCardToCard = (node, builder, {addSection, nodeFinished}) => {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        if (!node.className.match(/kg-gallery-card/)) {\n            return;\n        }\n\n        let payload = {};\n        let imgs = Array.from(node.querySelectorAll('img'));\n\n        // Process nodes into the payload\n        payload.images = imgs.map(_readGalleryImageFromNode);\n\n        _readFigCaptionFromNode(node, payload);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n\n    function grafGalleryToCard(node, builder, {addSection, nodeFinished}) {\n        function isGrafGallery(n) {\n            return n.nodeType === 1 && n.tagName === 'DIV' && n.dataset && n.dataset.paragraphCount && n.querySelectorAll('img').length > 0;\n        }\n\n        if (!isGrafGallery(node)) {\n            return;\n        }\n\n        let payload = {};\n\n        // These galleries exist in multiple divs. Read the images and caption from the first one...\n        let imgs = Array.from(node.querySelectorAll('img'));\n        _readFigCaptionFromNode(node, payload);\n\n        // ...and then iterate over any remaining divs until we run out of matches\n        let nextNode = node.nextSibling;\n        while (nextNode && isGrafGallery(nextNode)) {\n            let currentNode = nextNode;\n            imgs = imgs.concat(Array.from(currentNode.querySelectorAll('img')));\n            _readFigCaptionFromNode(currentNode, payload);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        // Process nodes into the payload\n        payload.images = imgs.map(_readGalleryImageFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function sqsGalleriesToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/sqs-gallery-container/) || node.className.match(/summary-/)) {\n            return;\n        }\n\n        let payload = {};\n\n        // Each image exists twice...\n        // The first image is wrapped in `<noscript>`\n        // The second image contains image dimensions but the src property needs to be taken from `data-src`.\n        let imgs = Array.from(node.querySelectorAll('img.thumb-image'));\n\n        imgs = imgs.map((img) => {\n            if (!img.getAttribute('src')) {\n                if (img.previousSibling.tagName === 'NOSCRIPT' && img.previousSibling.getElementsByTagName('img').length) {\n                    const prevNode = img.previousSibling;\n                    img.setAttribute('src', img.getAttribute('data-src'));\n                    prevNode.remove();\n                } else {\n                    return;\n                }\n            }\n\n            return img;\n        });\n\n        _readFigCaptionFromNode(node, payload, '.meta-title');\n\n        // Process nodes into the payload\n        payload.images = imgs.map(_readGalleryImageFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToImageCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let img = node.querySelector('img');\n        let kgClass = node.className.match(/kg-width-(wide|full)/);\n        let grafClass = node.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n        if (!img) {\n            return;\n        }\n\n        let payload = {\n            src: img.src,\n            alt: img.alt,\n            title: img.title\n        };\n\n        if (kgClass) {\n            payload.cardWidth = kgClass[1];\n        } else if (grafClass) {\n            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n        }\n\n        _readFigCaptionFromNode(node, payload);\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function imgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IMG') {\n            return;\n        }\n\n        let payload = {\n            src: node.src,\n            alt: node.alt,\n            title: node.title\n        };\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function hrToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'HR') {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('hr');\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToCodeCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let pre = node.querySelector('pre');\n\n        // If this figure doesn't have a pre tag in it\n        if (!pre) {\n            return;\n        }\n\n        let code = pre.querySelector('code');\n        let figcaption = node.querySelector('figcaption');\n\n        // if there's no caption the preCodeToCard plugin will pick it up instead\n        if (!code || !figcaption) {\n            return;\n        }\n\n        let payload = {\n            code: code.textContent\n        };\n\n        _readFigCaptionFromNode(node, payload);\n\n        let preClass = pre.getAttribute('class') || '';\n        let codeClass = code.getAttribute('class') || '';\n        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n        if (languageMatches) {\n            payload.language = languageMatches[1].toLowerCase();\n        }\n\n        let cardSection = builder.createCardSection('code', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function preCodeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'PRE') {\n            return;\n        }\n\n        let [codeElement] = node.children;\n\n        if (codeElement && codeElement.tagName === 'CODE') {\n            let payload = {code: codeElement.textContent};\n\n            let preClass = node.getAttribute('class') || '';\n            let codeClass = codeElement.getAttribute('class') || '';\n            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n            if (languageMatches) {\n                payload.language = languageMatches[1].toLowerCase();\n            }\n\n            let cardSection = builder.createCardSection('code', payload);\n            addSection(cardSection);\n            nodeFinished();\n        }\n    }\n\n    function figureScriptToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let script = node.querySelector('script');\n\n        if (!script || !script.src.match(/^https:\\/\\/gist\\.github\\.com/)) {\n            return;\n        }\n\n        let payload = {html: script.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // Nested paragraphs in blockquote are currently treated as separate blockquotes,\n    // see [here](https://github.com/bustle/mobiledoc-kit/issues/715). When running migrations,\n    // this is not the desired behaviour and will cause the content to lose the previous semantic.\n    function blockquoteWithChildren(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE' || node.children.length < 1) {\n            return;\n        }\n\n        const html = [];\n        const children = Array.from(node.children);\n\n        children.forEach((child) => {\n            let nextSibling = child.nextSibling;\n            let previousSibling = child.previousSibling;\n\n            // Only add a soft-break for two sequential paragraphs.\n            // Use the innerHTML only in that case, so Mobiledoc's default behaviour\n            // of creating separate blockquotes doesn't apply.\n            if (child.tagName === 'P' && (nextSibling && nextSibling.tagName === 'P')) {\n                html.push(`${child.innerHTML}<br><br>`);\n            } else if (child.tagName === 'P' && (previousSibling && previousSibling.tagName === 'P')) {\n                html.push(child.innerHTML);\n            } else {\n                html.push(child.outerHTML);\n            }\n        });\n\n        node.innerHTML = html.join('').trim();\n\n        return;\n    }\n\n    function tableToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'TABLE') {\n            return;\n        }\n\n        if (node.parentNode.tagName === 'TABLE') {\n            return;\n        }\n\n        let payload = {html: node.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    return [\n        embedCard.fromMixtape(options),\n        kgHtmlCardToCard,\n        buttonCard.fromKoenigCard(options),\n        buttonCard.fromWordpressButton(options),\n        buttonCard.fromSubstackButton(options),\n        kgCalloutCardToCard,\n        kgToggleCardToCard,\n        blockquoteWithChildren,\n        brToSoftBreakAtom,\n        removeLeadingNewline,\n        kgGalleryCardToCard,\n        embedCard.fromFigureBlockquote(options), // I think these can contain images\n        grafGalleryToCard,\n        sqsGalleriesToCard,\n        figureToImageCard,\n        imgToCard,\n        hrToCard,\n        figureToCodeCard,\n        preCodeToCard,\n        embedCard.fromFigureIframe(options),\n        embedCard.fromIframe(options), // Process iFrames without figures after ones with\n        figureScriptToHtmlCard,\n        tableToHtmlCard\n    ];\n}\n"],"names":["addFigCaptionToPayload","node","payload","selector","options","figcaptions","Array","from","querySelectorAll","length","forEach","caption","cleanHtml","cleanBasicHtml","innerHTML","remove","_createPayloadForIframe","iframe","src","match","url","html","outerHTML","fromMixtape","mixtapeEmbed","builder","addSection","nodeFinished","nodeType","tagName","className","anchorElement","querySelector","titleElement","descElement","imgElement","href","title","description","removeChild","metadata","publisher","style","thumbnail","cardSection","createCardSection","fromFigureIframe","figureIframeToEmbed","fromIframe","iframeToEmbedCard","fromFigureBlockquote","figureBlockquoteToEmbedCard","blockquote","link","getButtonText","buttonText","textContent","replace","trim","fromKoenigCard","kgButtonCardToCard","classList","contains","alignment","anchor","buttonUrl","fromWordpressButton","wordpressButtonToCard","closest","fromSubstackButton","substackButtonToCard","createParserPlugins","_options","defaults","Object","assign","createDocument","Parser","DOMParser","window","Error","parser","parseFromString","_readFigCaptionFromNode","_readGalleryImageFromNode","imgNum","fileName","image","row","Math","floor","width","dataset","parseInt","height","getAttribute","exec","alt","kgHtmlCardToCard","nodeValue","isHtmlEndComment","n","nextNode","nextSibling","currentNode","push","join","kgCalloutCardToCard","emojiNode","htmlNode","backgroundColor","calloutEmoji","calloutText","kgToggleCardToCard","headingNode","contentNode","toggleHeading","toggleContent","heading","content","brToSoftBreakAtom","addMarkerable","softReturn","createAtom","removeLeadingNewline","nodeName","kgGalleryCardToCard","imgs","images","map","grafGalleryToCard","isGrafGallery","paragraphCount","concat","sqsGalleriesToCard","img","previousSibling","getElementsByTagName","prevNode","setAttribute","figureToImageCard","kgClass","grafClass","cardWidth","imgToCard","hrToCard","figureToCodeCard","pre","code","figcaption","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","preCodeToCard","codeElement","children","figureScriptToHtmlCard","script","blockquoteWithChildren","child","tableToHtmlCard","parentNode","embedCard","buttonCard"],"mappings":"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"}